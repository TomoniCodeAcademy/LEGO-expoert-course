#
# test code for LEGO SPIKE and HuskyLens 
#
# function:  
#This program ensures the servo motor continuously faces the target TAG.

import sys
from hub import port
import time

SCREEN_WIDTH =320
CENTER_X = int(SCREEN_WIDTH / 2)

sys.path.append('/projects/mylib000')
from huskylens_lib import Algo
from huskylens_lib import HuskyLens

from spike import MotorPair
motor_pair = MotorPair('A', 'B')
motor_pair.set_default_speed(20)

port.F.mode(port.MODE_FULL_DUPLEX)
time.sleep(1)                # need delay for Port setup ??
port.F.baud(9600)

husky = HuskyLens(port.F)
husky.send_CMD_REQ_ALGO(Algo.TAG_RECOGNITION)

def turn_and_find():
    # turn right
    for _ in range(20):
        motor_pair.move(35, unit='degrees', steering=100)
        time.sleep(0.5) # wait for stability
        info = husky.read_tags()
        print(info)
        if len(info)>0:
            if info[0][0]=='block' and info[0][1]==1:
                print('find target')
                return True
    print('can not find target')
    return False


while True:
    info = husky.read_tags()
    if len(info)>0:
        if info[0][0]=='block' and info[0][1]==1:
            (_,_,x,y,w,h) = info[0]
            print('find:',x,y,w,h)
            if abs(CENTER_X -x ) < 20:
                continue
            if x > CENTER_X:
                motor_pair.move(10, unit='degrees', steering=100)
                time.sleep(0.5) # wait for stability
            if x < CENTER_X:
                motor_pair.move(10, unit='degrees', steering=-100)
                time.sleep(0.5) # wait for stability
    else:
        print('not find target')
        turn_and_find()


